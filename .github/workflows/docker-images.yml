name: docker-images

on:
  push:
  pull_request:

jobs:
  multi:
    runs-on: ubuntu-latest
    steps:
      -
        name: Determin docker tag
        env:
          TAG_NAME: ${{ github.ref }}
        run: |
          case "${TAG_NAME}" in
            refs/heads/master)
              tag=latest
              ;;
            refs/tags/*)
              tag=${TAG_NAME#refs/tags/}
              ;;
            refs/heads/*)
              tag=branch-${TAG_NAME#refs/heads/}
              ;;
            *)
              tag="dummy"
              ;;
          esac
          echo "docker_tag=${tag}" >> $GITHUB_ENV
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      -
        name: Prevent from loading rubygems from TUNA
        run: |
          sed -i "/^source/c source 'https://rubygems.org'" Gemfile
          sed -i '/remote:/s@remote: .*$@remote: https://rubygems.org@' Gemfile.lock
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Cache Docker layers
        uses: actions/cache@v4
        if: github.event_name == 'push'
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-mirrorweb-${{ env.docker_tag }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-mirrorweb-${{ env.docker_tag }}-
            ${{ runner.os }}-buildx-mirrorweb-latest-
      -
        name: Cache Docker layers
        uses: actions/cache@v4
        if: github.event_name == 'pull_request'
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-pr-${{ github.event.pull_request.head.user.login }}-buildx-mirrorweb-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pr-${{ github.event.pull_request.head.user.login }}-buildx-mirrorweb-
            ${{ runner.os }}-buildx-mirrorweb-latest-
      -
        name: Cache Docker layers
        if: github.event_name != 'push' && github.event_name != 'pull_request'
        run: |
          echo "I do not know how to setup cache"
          exit -1
      -
        name: Test Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build
          push: false
          tags: tunathu/mirror-web:localtest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/local-test-build-cache
          load: true
      -
        name: Test Run Page Build
        run: |
          docker run --rm \
            -v $PWD:/data \
            -v $PWD/_site:/data/_site \
            --tmpfs /data/.jekyll-cache \
            --tmpfs /data/node_modules:exec \
            --env VISUALIZER=1 \
            tunathu/mirror-web:localtest \
            bash -c "npm install rollup-plugin-visualizer && jekyll build --future"
      -
        name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: _site
      -
        name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stats.html
          path: _stats.html
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        if: github.event_name == 'push'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: tunathu/mirror-web:${{ env.docker_tag }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=local,src=/tmp/local-test-build-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
